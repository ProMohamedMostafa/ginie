// <auto-generated />
using System;
using GenieMistro.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenieMistro.Migrations
{
    [DbContext(typeof(genieDBContext))]
    [Migration("20210602182352_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenieMistro.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GenieMistro.Models.ActionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("ActionPlan");
                });

            modelBuilder.Entity("GenieMistro.Models.BusinessAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaWebSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<double>("SubscriptionYearsBackage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BusinessAccount");
                });

            modelBuilder.Entity("GenieMistro.Models.CompAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CompId")
                        .HasColumnType("int");

                    b.Property<int?>("StructureLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompId");

                    b.ToTable("CompAssign");
                });

            modelBuilder.Entity("GenieMistro.Models.Competency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComDeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComLevels")
                        .HasColumnType("int");

                    b.Property<string>("ComType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competency");
                });

            modelBuilder.Entity("GenieMistro.Models.Indicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("IndicatorText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("Indicator");
                });

            modelBuilder.Entity("GenieMistro.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectingMisionSuccess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffectingMissionFailure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MissionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisionId")
                        .HasColumnType("int");

                    b.Property<int?>("WightFromVision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisionId");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("GenieMistro.Models.MissionDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MissionDept");
                });

            modelBuilder.Entity("GenieMistro.Models.MissionMissionDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MissionDeptId")
                        .HasColumnType("int");

                    b.Property<int>("MissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MissionDeptId");

                    b.HasIndex("MissionId");

                    b.ToTable("MissionMissionDept");
                });

            modelBuilder.Entity("GenieMistro.Models.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Objective");
                });

            modelBuilder.Entity("GenieMistro.Models.ObjectiveEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("ObjectiveEmployee");
                });

            modelBuilder.Entity("GenieMistro.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectWeight")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StratigicObjectiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StratigicObjectiveId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("GenieMistro.Models.Purpose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurposeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurposeText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Purpose");
                });

            modelBuilder.Entity("GenieMistro.Models.StratigicObjective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepdancyStratigicObjective")
                        .HasColumnType("int");

                    b.Property<int?>("DepdancyStratigicObjectiveNavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MissionId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StrObjDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StratigicObjectiveName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepdancyStratigicObjectiveNavigationId");

                    b.HasIndex("MissionId");

                    b.ToTable("StratigicObjective");
                });

            modelBuilder.Entity("GenieMistro.Models.TbEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpTitleLevel")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TbEmployee");
                });

            modelBuilder.Entity("GenieMistro.Models.Vision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PurposeId")
                        .HasColumnType("int");

                    b.Property<string>("VisionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurposeId");

                    b.ToTable("Vision");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GenieMistro.Models.ActionPlan", b =>
                {
                    b.HasOne("GenieMistro.Models.Objective", "Objective")
                        .WithMany("ActionPlans")
                        .HasForeignKey("ObjectiveId");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("GenieMistro.Models.CompAssign", b =>
                {
                    b.HasOne("GenieMistro.Models.Competency", "Comp")
                        .WithMany("CompAssigns")
                        .HasForeignKey("CompId");

                    b.Navigation("Comp");
                });

            modelBuilder.Entity("GenieMistro.Models.Indicator", b =>
                {
                    b.HasOne("GenieMistro.Models.Competency", "Com")
                        .WithMany("Indicators")
                        .HasForeignKey("ComId");

                    b.Navigation("Com");
                });

            modelBuilder.Entity("GenieMistro.Models.Mission", b =>
                {
                    b.HasOne("GenieMistro.Models.Vision", "Vision")
                        .WithMany("Missions")
                        .HasForeignKey("VisionId");

                    b.Navigation("Vision");
                });

            modelBuilder.Entity("GenieMistro.Models.MissionMissionDept", b =>
                {
                    b.HasOne("GenieMistro.Models.MissionDept", "MissionDept")
                        .WithMany("MissionMissionDepts")
                        .HasForeignKey("MissionDeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenieMistro.Models.Mission", "Mission")
                        .WithMany("MissionMissionDepts")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("MissionDept");
                });

            modelBuilder.Entity("GenieMistro.Models.Objective", b =>
                {
                    b.HasOne("GenieMistro.Models.Project", "Project")
                        .WithMany("Objectives")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("GenieMistro.Models.ObjectiveEmployee", b =>
                {
                    b.HasOne("GenieMistro.Models.TbEmployee", "Employee")
                        .WithMany("ObjectiveEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenieMistro.Models.Objective", "Objective")
                        .WithMany("ObjectiveEmployees")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("GenieMistro.Models.Project", b =>
                {
                    b.HasOne("GenieMistro.Models.StratigicObjective", "StratigicObjective")
                        .WithMany("Projects")
                        .HasForeignKey("StratigicObjectiveId");

                    b.Navigation("StratigicObjective");
                });

            modelBuilder.Entity("GenieMistro.Models.StratigicObjective", b =>
                {
                    b.HasOne("GenieMistro.Models.StratigicObjective", "DepdancyStratigicObjectiveNavigation")
                        .WithMany("InverseDepdancyStratigicObjectiveNavigation")
                        .HasForeignKey("DepdancyStratigicObjectiveNavigationId");

                    b.HasOne("GenieMistro.Models.Mission", "Mission")
                        .WithMany("StratigicObjectives")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepdancyStratigicObjectiveNavigation");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("GenieMistro.Models.Vision", b =>
                {
                    b.HasOne("GenieMistro.Models.Purpose", "Purpose")
                        .WithMany("Visions")
                        .HasForeignKey("PurposeId");

                    b.Navigation("Purpose");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GenieMistro.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GenieMistro.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenieMistro.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GenieMistro.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenieMistro.Models.Competency", b =>
                {
                    b.Navigation("CompAssigns");

                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("GenieMistro.Models.Mission", b =>
                {
                    b.Navigation("MissionMissionDepts");

                    b.Navigation("StratigicObjectives");
                });

            modelBuilder.Entity("GenieMistro.Models.MissionDept", b =>
                {
                    b.Navigation("MissionMissionDepts");
                });

            modelBuilder.Entity("GenieMistro.Models.Objective", b =>
                {
                    b.Navigation("ActionPlans");

                    b.Navigation("ObjectiveEmployees");
                });

            modelBuilder.Entity("GenieMistro.Models.Project", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("GenieMistro.Models.Purpose", b =>
                {
                    b.Navigation("Visions");
                });

            modelBuilder.Entity("GenieMistro.Models.StratigicObjective", b =>
                {
                    b.Navigation("InverseDepdancyStratigicObjectiveNavigation");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("GenieMistro.Models.TbEmployee", b =>
                {
                    b.Navigation("ObjectiveEmployees");
                });

            modelBuilder.Entity("GenieMistro.Models.Vision", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
